basePath: /
consumes:
- application/json
definitions:
  user.UserDetailsRes:
    properties:
      age:
        example: 3
        type: integer
      birthday:
        example: "2021-01-01 00:00:00"
        type: string
      company:
        example: 罗智地产有限公司
        type: string
      createDate:
        example: "2021-01-01 00:00:00"
        type: string
      department:
        example: tnnd怎么还不点
        type: string
      id:
        example: 1
        type: integer
      info:
        example: 今晚点喂
        type: string
      mail:
        example: 123456@abc.com
        type: string
      name:
        example: M.Salah
        type: string
      phone:
        example: "12345678912"
        type: string
      qqNumber:
        example: "123456789"
        type: string
      realName:
        example: 罗智
        type: string
      sex:
        enum:
        - 男
        - 女
        example: 男
        type: string
      token:
        example: NDOAIIF@!Afaad21dAONF24b78B9b23br9B(HRbnv8020Bv893htb08BbivB082
        type: string
      vocation:
        example: 包工头
        type: string
      wechat:
        example: M.Salah
        type: string
    type: object
  user.UserReq:
    properties:
      age:
        example: 3
        type: integer
      birthday:
        example: "2021-01-01 00:00:00"
        type: string
      company:
        example: 罗智地产有限公司
        type: string
      department:
        example: tnnd怎么还不点
        type: string
      info:
        example: 今晚点喂
        type: string
      mail:
        example: 123456@abc.com
        type: string
      name:
        example: M.Salah
        type: string
      password:
        example: "123456"
        type: string
      phone:
        example: "12345678912"
        type: string
      qqnumber:
        example: "123456789"
        type: string
      realname:
        example: 罗智
        type: string
      sex:
        enum:
        - 男
        - 女
        example: 男
        type: string
      vocation:
        example: 包工头
        type: string
      wechat:
        example: M.Salah
        type: string
    type: object
  utils.Response:
    properties:
      code:
        example: 200
        type: integer
      data: {}
      msg:
        example: 操作成功
        type: string
    type: object
host: 47.107.108.127:80
info:
  contact: {}
  description: |
    除了用户登录和注册以及头像获取三个接口
    其他的都需要用户携带TOKEN进行用户验证，否则无法访问接口

    TOKEN 格式 ： KEY：Authorization VALUE： "JWT " + 登录时返回的对应TOKEN   （放在请求的header中）
  license:
    name: ha 1.0
  title: JieTong API
  version: "1.0"
paths:
  /user/cancellation:
    delete:
      parameters:
      - description: 用户登录返回的TOKEN
        in: header
        name: Authorization
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.Response'
      security:
      - ApiKeyAuth: []
      summary: 用户注销
      tags:
      - User
  /user/editor/message:
    post:
      parameters:
      - description: 用户登录返回的TOKEN
        in: header
        name: Authorization
        required: true
        type: string
      - description: 用户信息
        in: body
        name: userReq
        required: true
        schema:
          $ref: '#/definitions/user.UserReq'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.Response'
      security:
      - ApiKeyAuth: []
      summary: 修改用户信息
      tags:
      - User
  /user/login:
    post:
      consumes:
      - application/x-www-form-urlencoded
      parameters:
      - description: 用户邮箱
        in: body
        name: Mail
        required: true
        schema:
          type: string
      - description: 用户密码
        in: body
        name: Password
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/utils.Response'
            - properties:
                data:
                  $ref: '#/definitions/user.UserDetailsRes'
              type: object
      security:
      - ApiKeyAuth: []
      summary: 用户登录
      tags:
      - User
  /user/message:
    get:
      parameters:
      - description: 用户登录返回的TOKEN
        in: header
        name: Authorization
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/utils.Response'
            - properties:
                data:
                  $ref: '#/definitions/user.UserDetailsRes'
              type: object
      security:
      - ApiKeyAuth: []
      summary: 获取用户信息
      tags:
      - User
  /user/photo/{id:int}:
    get:
      consumes:
      - application/x-www-form-urlencoded
      parameters:
      - description: 用户id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 直接返回文件的渲染视图
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 获取头像
      tags:
      - User
  /user/registe:
    post:
      consumes:
      - application/x-www-form-urlencoded
      parameters:
      - description: 用户信息
        in: body
        name: userReq
        required: true
        schema:
          $ref: '#/definitions/user.UserReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.Response'
      security:
      - ApiKeyAuth: []
      summary: 用户注册
      tags:
      - User
  /user/set_photo:
    post:
      parameters:
      - description: 用户登录返回的TOKEN
        in: header
        name: Authorization
        required: true
        type: string
      - description: 头像文件
        in: formData
        name: UserPhoto
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.Response'
      security:
      - ApiKeyAuth: []
      summary: 设置头像
      tags:
      - User
produces:
- application/json
swagger: "2.0"
